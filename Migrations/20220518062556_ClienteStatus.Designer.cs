// <auto-generated/>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SAPCS.Data;

namespace SAPCS.Migrations
{
    [DbContext(typeof(SAPCSContext))]
    [Migration("20220518062556_ClienteStatus")]
    partial class ClienteStatus
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SAPCS.Models.ApoliceSegur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int>("FuncionarioId")
                        .HasColumnType("int");

                    b.Property<string>("NomeArquivo")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("FuncionarioId");

                    b.ToTable("ApolicesSegur");
                });

            modelBuilder.Entity("SAPCS.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CPFCli")
                        .HasColumnType("varchar(11)");

                    b.Property<DateTime>("DtCadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime>("DtModificacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime>("DtNascCli")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailCli")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("NomeCli")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("StatusCli")
                        .HasColumnType("bit");

                    b.Property<string>("TelCli")
                        .IsRequired()
                        .HasColumnType("varchar(11)");

                    b.Property<string>("ValEmail")
                        .HasColumnType("varchar(11)");

                    b.Property<string>("ValTel")
                        .IsRequired()
                        .HasColumnType("varchar(11)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("SAPCS.Models.Cotacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtModificacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("FuncionarioId")
                        .HasColumnType("int");

                    b.Property<int>("StatusCot")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("FuncionarioId");

                    b.ToTable("Cotacoes");
                });

            modelBuilder.Entity("SAPCS.Models.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NomeFunc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelFunc")
                        .HasColumnType("varchar(13)");

                    b.HasKey("Id");

                    b.ToTable("Funcionarios");
                });

            modelBuilder.Entity("SAPCS.Models.Seguradora", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmailContSegur")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EndSegur")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NomeContSegur")
                        .HasColumnType("varchar(80)");

                    b.Property<string>("NomeSegur")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SiteSegur")
                        .HasColumnType("varchar(40)");

                    b.Property<bool>("StatusSegur")
                        .HasColumnType("bit");

                    b.Property<string>("TelSegur")
                        .HasColumnType("varchar(13)");

                    b.HasKey("Id");

                    b.ToTable("Seguradoras");
                });

            modelBuilder.Entity("SAPCS.Models.Servico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NomeServ")
                        .HasColumnType("varchar(60)");

                    b.Property<int>("SeguradoraId")
                        .HasColumnType("int");

                    b.Property<bool>("StatusServ")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("SeguradoraId");

                    b.ToTable("Servicos");
                });

            modelBuilder.Entity("SAPCS.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("FuncionarioId")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("UltimoAcesso")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("SAPCS.Models.ApoliceSegur", b =>
                {
                    b.HasOne("SAPCS.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SAPCS.Models.Funcionario", "Funcionario")
                        .WithMany()
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("SAPCS.Models.Cotacao", b =>
                {
                    b.HasOne("SAPCS.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SAPCS.Models.Funcionario", "Funcionario")
                        .WithMany()
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("SAPCS.Models.Servico", b =>
                {
                    b.HasOne("SAPCS.Models.Seguradora", "Seguradora")
                        .WithMany()
                        .HasForeignKey("SeguradoraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Seguradora");
                });

            modelBuilder.Entity("SAPCS.Models.Usuario", b =>
                {
                    b.HasOne("SAPCS.Models.Funcionario", "Funcionario")
                        .WithOne("Usuario")
                        .HasForeignKey("SAPCS.Models.Usuario", "FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("SAPCS.Models.Funcionario", b =>
                {
                    b.Navigation("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
